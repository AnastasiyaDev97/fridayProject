{"version":3,"file":"static/js/949.469cee56.chunk.js","mappings":"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","sources":["constants/form/index.ts","hooks/useResponseHandler.tsx","pages/Register/index.tsx","webpack://my-app/./src/pages/Login/Login.module.scss?62e7"],"sourcesContent":["export const INPUT_TYPE = {\r\n  PASSWORD: 'password',\r\n  TEXT: 'text',\r\n  EMAIL: 'email',\r\n} as const;\r\n\r\nexport const REGISTRATION_FORM_FIELDS = [\r\n  {\r\n    register: 'email',\r\n    placeholder: 'Enter your email',\r\n    type: INPUT_TYPE.EMAIL,\r\n  },\r\n  {\r\n    register: 'password',\r\n    placeholder: 'Enter a new password',\r\n    type: INPUT_TYPE.PASSWORD,\r\n  },\r\n  {\r\n    register: 'confirmPassword',\r\n    placeholder: 'Confirm your password',\r\n    type: INPUT_TYPE.PASSWORD,\r\n  },\r\n];\r\n\r\nexport const FORM_FIELDS_NAME = {\r\n  REMEMBER_ME: 'rememberMe',\r\n  EMAIL: 'email',\r\n  PASSWORD: 'password',\r\n  NAME: 'name',\r\n  CONFIRM_PASSWORD: 'confirmPassword',\r\n} as const;\r\n","import { useEffect } from 'react';\r\n\r\nimport { STATUS } from 'constants/app';\r\nimport { useAppDispatch } from 'store';\r\nimport { setAppStatus, setErrorText } from 'store/reducers';\r\n\r\ntype UseResponsePropsType = {\r\n  isLoading: boolean;\r\n  isSuccess: boolean;\r\n  isError: boolean;\r\n  errorText?: string;\r\n};\r\n\r\nexport const useResponseHandler = ({\r\n  isLoading,\r\n  isSuccess,\r\n  isError,\r\n  errorText,\r\n}: UseResponsePropsType): void => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      dispatch(setAppStatus({ status: STATUS.LOADING }));\r\n    }\r\n    if (isSuccess) {\r\n      dispatch(setAppStatus({ status: STATUS.SUCCEEDED }));\r\n    }\r\n    if (isError) {\r\n      dispatch(setAppStatus({ status: STATUS.FAILED }));\r\n      dispatch(setErrorText({ errorText: errorText || 'Something went wrong' }));\r\n    }\r\n  }, [dispatch, isLoading, isSuccess, isError, errorText]);\r\n};\r\n","import { useCallback, useEffect } from 'react';\r\n\r\nimport { useFormik } from 'formik';\r\nimport { Navigate, useNavigate } from 'react-router-dom';\r\n\r\nimport { InputType } from 'common/types/InputType';\r\nimport { ReturnComponentType } from 'common/types/ReturnComponentType';\r\nimport { SuperButton, UniversalInput } from 'components';\r\nimport { REGISTRATION_FORM_FIELDS } from 'constants/form';\r\nimport { EMPTY_STRING } from 'constants/index';\r\nimport { ROUTES } from 'constants/routes';\r\nimport { useRegisterMutation } from 'dal/authorization';\r\nimport { useResponseHandler } from 'hooks/useResponseHandler';\r\nimport styles from 'pages/Login/Login.module.scss';\r\nimport { useAppDispatch, useAppSelector } from 'store';\r\nimport { setRegisterStatus } from 'store/reducers';\r\nimport { AuthData, validates } from 'utils';\r\n\r\nconst Register = (): ReturnComponentType => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [register, { data: registerData, isError, isLoading, isSuccess }] =\r\n    useRegisterMutation();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const registerStatus = useAppSelector(state => state.auth.isRegistered);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: EMPTY_STRING,\r\n      password: EMPTY_STRING,\r\n      confirmPassword: EMPTY_STRING,\r\n    },\r\n\r\n    validate: values => {\r\n      const errors: AuthData = {};\r\n\r\n      validates(values, errors);\r\n\r\n      return errors;\r\n    },\r\n\r\n    onSubmit: ({ email, password }) => {\r\n      register({ email, password });\r\n    },\r\n  });\r\n\r\n  const isRegisterButtonDisabled =\r\n    Object.keys(formik.errors)?.length > 0 || Object.keys(formik.touched)?.length === 0;\r\n\r\n  useEffect(() => {\r\n    if (registerData) {\r\n      dispatch(setRegisterStatus(true));\r\n    }\r\n  }, [registerData, dispatch]);\r\n\r\n  useResponseHandler({\r\n    isLoading,\r\n    isSuccess,\r\n    isError,\r\n  });\r\n\r\n  const onCancelButtonClick = useCallback(() => {\r\n    formik.resetForm();\r\n    navigate(ROUTES.LOGIN);\r\n  }, [formik, navigate]);\r\n\r\n  if (registerStatus) {\r\n    return (\r\n      <Navigate\r\n        to={ROUTES.LOGIN}\r\n        state={{ emailFromRegister: registerData?.addedUser?.email }}\r\n        replace\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <h2 className={styles.title}>Sign up</h2>\r\n      <form onSubmit={formik.handleSubmit} className={styles.form}>\r\n        <div className={styles.inputsWrapper}>\r\n          {REGISTRATION_FORM_FIELDS.map(\r\n            ({\r\n              register,\r\n              placeholder,\r\n              type,\r\n            }: {\r\n              register: string;\r\n              placeholder: string;\r\n              type: InputType;\r\n            }) => (\r\n              <UniversalInput\r\n                validationErr={\r\n                  (formik.touched[register as keyof typeof formik.touched] &&\r\n                    formik.errors[register as keyof typeof formik.touched]) ||\r\n                  EMPTY_STRING\r\n                }\r\n                formikProps={formik.getFieldProps(register)}\r\n                type={type}\r\n                placeholder={placeholder}\r\n                key={register}\r\n              />\r\n            ),\r\n          )}\r\n        </div>\r\n\r\n        <div className={styles.row}>\r\n          <div className={styles.registrationBtns}>\r\n            <SuperButton\r\n              type=\"submit\"\r\n              className={styles.registerBtn}\r\n              disabled={isRegisterButtonDisabled}\r\n            >\r\n              Register\r\n            </SuperButton>\r\n            <SuperButton\r\n              type=\"button\"\r\n              onClick={onCancelButtonClick}\r\n              className={styles.registerBtn}\r\n            >\r\n              Cancel\r\n            </SuperButton>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Login_wrapper__1rI2S\",\"form\":\"Login_form__LxTDf\",\"inputsWrapper\":\"Login_inputsWrapper__FcfGc\",\"registrationBtns\":\"Login_registrationBtns__4bEon\",\"submitBtn\":\"Login_submitBtn__oXced\",\"registerLink\":\"Login_registerLink__D-fug\",\"row\":\"Login_row__bysr9\",\"title\":\"Login_title__-Qf3T\",\"sendMailBlock\":\"Login_sendMailBlock__0MDly\",\"sendMailBtn\":\"Login_sendMailBtn__DEA8C\",\"sendMailMessage\":\"Login_sendMailMessage__VIUxh\",\"registerBtn\":\"Login_registerBtn__OeUh8\"};"],"names":["INPUT_TYPE","REGISTRATION_FORM_FIELDS","register","placeholder","type","FORM_FIELDS_NAME","REMEMBER_ME","EMAIL","PASSWORD","NAME","CONFIRM_PASSWORD","useResponseHandler","_ref","isLoading","isSuccess","isError","errorText","dispatch","useAppDispatch","useEffect","setAppStatus","status","STATUS","setErrorText","_Object$keys","_Object$keys2","_useRegisterMutation","useRegisterMutation","_useRegisterMutation2","_slicedToArray","_useRegisterMutation3","registerData","data","navigate","useNavigate","registerStatus","useAppSelector","state","auth","isRegistered","formik","useFormik","initialValues","email","EMPTY_STRING","password","confirmPassword","validate","values","errors","validates","onSubmit","isRegisterButtonDisabled","Object","keys","length","touched","setRegisterStatus","_registerData$addedUs","onCancelButtonClick","useCallback","resetForm","ROUTES","_jsx","Navigate","to","emailFromRegister","addedUser","replace","_jsxs","className","styles","children","handleSubmit","_ref2","UniversalInput","validationErr","formikProps","getFieldProps","SuperButton","disabled","onClick"],"sourceRoot":""}