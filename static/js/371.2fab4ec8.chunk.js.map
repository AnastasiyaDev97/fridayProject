{"version":3,"file":"static/js/371.2fab4ec8.chunk.js","mappings":"iLAYaA,EAAqB,SAAHC,GAII,IAHjCC,EAASD,EAATC,UACAC,EAASF,EAATE,UACAC,EAAOH,EAAPG,QAEMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACJL,GACFG,GAASG,EAAAA,EAAAA,IAAa,CAAEC,OAAQC,EAAAA,EAAAA,WAE9BP,GACFE,GAASG,EAAAA,EAAAA,IAAa,CAAEC,OAAQC,EAAAA,EAAAA,aAE9BN,IACFC,GAASG,EAAAA,EAAAA,IAAa,CAAEC,OAAQC,EAAAA,EAAAA,UAChCL,GAASM,EAAAA,EAAAA,IAAa,CAAEC,UAAW,0BAEvC,GAAG,CAACP,EAAUH,EAAWC,EAAWC,GACtC,C,sGC9BA,EAA0B,uB,UCCbS,EAGA,W,qCCyDb,GAlDcC,EAAAA,EAAAA,OAAK,WACjB,IAAAC,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAiCC,EAAAA,EAAAA,GAAAH,EAAA,GAArB,GAEbI,EAAiBF,EAAaG,IAAI,QAClCC,EAAcC,OAAOL,EAAaG,IAAI,UAAY,EAClDG,EAAMD,OAAOL,EAAaG,IAAI,QAC9BI,EAAMF,OAAOL,EAAaG,IAAI,QAC9BK,EAAYR,EAAaG,IAAI,SAAWP,EACxCa,EAAST,EAAaG,IAAI,WAAa,GAE7CO,GAMIC,EAAAA,EAAAA,IAAiB,CACnBC,KAAMR,EACNE,IAAAA,EACAC,IAAAA,EACAM,SAAUX,EACVY,QAASL,EACTD,UAAWA,EACXO,UAAWC,EAAAA,KAZLC,EAAKP,EAAXQ,KACAhC,EAASwB,EAATxB,UACAD,EAASyB,EAATzB,UACAkC,EAAUT,EAAVS,WACAhC,EAAOuB,EAAPvB,QAiBF,OANAJ,EAAAA,EAAAA,GAAmB,CACjBE,UAAWkC,GAAclC,EACzBC,UAAAA,EACAC,QAAAA,KAIAiC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAcC,SAAA,EAC5BC,EAAAA,EAAAA,KAACC,EAAAA,GAAW,CACVC,qBAAsBpB,EACtBqB,qBAAsBpB,EACtBqB,cAAoB,OAALX,QAAK,IAALA,OAAK,EAALA,EAAOW,iBAExBJ,EAAAA,EAAAA,KAACK,EAAAA,GAAS,CACRZ,MAAY,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOa,UACd1B,YAAaA,EACb2B,eAAqB,OAALd,QAAK,IAALA,OAAK,EAALA,EAAOe,oBACvBxB,UAAWA,EACXN,eAAgBA,MAIxB,G","sources":["hooks/useResponseHandler.tsx","webpack://my-app/./src/pages/Packs/Packs.module.scss?3df2","constants/data/index.ts","pages/Packs/index.tsx"],"sourcesContent":["import { useEffect } from 'react';\r\n\r\nimport { STATUS } from 'constants/app';\r\nimport { useAppDispatch } from 'store';\r\nimport { setAppStatus, setErrorText } from 'store/reducers';\r\n\r\ntype UseResponsePropsType = {\r\n  isLoading: boolean;\r\n  isSuccess: boolean;\r\n  isError: boolean;\r\n};\r\n\r\nexport const useResponseHandler = ({\r\n  isLoading,\r\n  isSuccess,\r\n  isError,\r\n}: UseResponsePropsType): void => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      dispatch(setAppStatus({ status: STATUS.LOADING }));\r\n    }\r\n    if (isSuccess) {\r\n      dispatch(setAppStatus({ status: STATUS.SUCCEEDED }));\r\n    }\r\n    if (isError) {\r\n      dispatch(setAppStatus({ status: STATUS.FAILED }));\r\n      dispatch(setErrorText({ errorText: 'Something went wrong' }));\r\n    }\r\n  }, [dispatch, isLoading, isSuccess, isError]);\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Packs_wrapper__tpGUk\"};","import { LiteralObjectType } from 'common/types/LiteralObjectType';\r\n\r\nexport const SORT_CARDS_TYPE = {\r\n  nameUP: '0name',\r\n  nameDOWN: '1name',\r\n  updatedUP: '0updated',\r\n  updateDOWN: '1update',\r\n  answerUP: '0answer',\r\n  answerDOWN: '1answer',\r\n  questionUP: '0question',\r\n  questionDOWN: '1question',\r\n  gradeUP: '0grade',\r\n  gradeDOWN: '1grade',\r\n} as const;\r\n\r\nexport type SortCardType = LiteralObjectType<typeof SORT_CARDS_TYPE>;\r\n","import { memo } from 'react';\r\n\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nimport style from './Packs.module.scss';\r\n\r\nimport { PacksList, PacksParams } from 'components';\r\nimport { SORT_CARDS_TYPE } from 'constants/data';\r\nimport { PAGE_COUNT } from 'constants/table';\r\nimport { useGetPacksQuery } from 'dal/packs';\r\nimport { useResponseHandler } from 'hooks/useResponseHandler';\r\n\r\nconst Packs = memo(() => {\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const actualPackName = searchParams.get('name');\r\n  const currentPage = Number(searchParams.get('page')) || 1;\r\n  const min = Number(searchParams.get('min'));\r\n  const max = Number(searchParams.get('max'));\r\n  const sortPacks = searchParams.get('sort') || SORT_CARDS_TYPE.updatedUP;\r\n  const userId = searchParams.get('userId') || '';\r\n\r\n  const {\r\n    data: packs,\r\n    isSuccess,\r\n    isLoading,\r\n    isFetching,\r\n    isError,\r\n  } = useGetPacksQuery({\r\n    page: currentPage,\r\n    min,\r\n    max,\r\n    packName: actualPackName,\r\n    user_id: userId,\r\n    sortPacks: sortPacks,\r\n    pageCount: PAGE_COUNT,\r\n  });\r\n\r\n  useResponseHandler({\r\n    isLoading: isFetching || isLoading,\r\n    isSuccess,\r\n    isError,\r\n  });\r\n\r\n  return (\r\n    <div className={style.wrapper}>\r\n      <PacksParams\r\n        currentMinCardsValue={min}\r\n        currentMaxCardsValue={max}\r\n        maxCardsCount={packs?.maxCardsCount}\r\n      />\r\n      <PacksList\r\n        packs={packs?.cardPacks}\r\n        currentPage={currentPage}\r\n        totalItemCount={packs?.cardPacksTotalCount}\r\n        sortPacks={sortPacks}\r\n        actualPackName={actualPackName}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Packs;\r\n"],"names":["useResponseHandler","_ref","isLoading","isSuccess","isError","dispatch","useAppDispatch","useEffect","setAppStatus","status","STATUS","setErrorText","errorText","SORT_CARDS_TYPE","memo","_useSearchParams","useSearchParams","searchParams","_slicedToArray","actualPackName","get","currentPage","Number","min","max","sortPacks","userId","_useGetPacksQuery","useGetPacksQuery","page","packName","user_id","pageCount","PAGE_COUNT","packs","data","isFetching","_jsxs","className","style","children","_jsx","PacksParams","currentMinCardsValue","currentMaxCardsValue","maxCardsCount","PacksList","cardPacks","totalItemCount","cardPacksTotalCount"],"sourceRoot":""}