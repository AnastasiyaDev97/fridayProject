{"version":3,"file":"static/js/484.a474ec4c.chunk.js","mappings":"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","sources":["webpack://my-app/./src/pages/Users/Users.module.scss?cb5c","dal/users/index.ts","pages/Users/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"usersPage\":\"Users_usersPage__5JNvx\",\"title\":\"Users_title__5hhOH\",\"usersContainer\":\"Users_usersContainer__EaTRp\"};","import URI from 'urijs';\r\n\r\nimport {\r\n  getUserQueryParamsType,\r\n  getUserResponseType,\r\n  getUsersQueryParamsType,\r\n  getUsersResponseType,\r\n} from './types';\r\n\r\nimport { builderType, clientAPI } from 'dal';\r\n\r\nconst usersAPI = clientAPI.injectEndpoints({\r\n  endpoints: (build: builderType) => ({\r\n    getUsers: build.query<getUsersResponseType, getUsersQueryParamsType>({\r\n      query(queryParams) {\r\n        const URL = new URI(`social/users`);\r\n\r\n        URL.addQuery({ ...queryParams });\r\n\r\n        return {\r\n          url: URL.toString(),\r\n        };\r\n      },\r\n    }),\r\n    getUser: build.query<getUserResponseType, getUserQueryParamsType>({\r\n      query(queryParams) {\r\n        const URL = new URI(`social/user`);\r\n\r\n        URL.addQuery({ ...queryParams });\r\n\r\n        return {\r\n          url: URL.toString(),\r\n        };\r\n      },\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetUsersQuery, useGetUserQuery, useLazyGetUsersQuery } = usersAPI;\r\n","import { useState } from 'react';\r\n\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nimport style from './Users.module.scss';\r\n\r\nimport initialAvatar from 'common/assets/images/noavatar.png';\r\nimport { ReturnComponentType } from 'common/types';\r\nimport { SkeletonUserListItem, UserListItem, InfiniteScroll } from 'components';\r\nimport { STATUS } from 'constants/app';\r\nimport { PAGE_COUNT } from 'constants/table';\r\nimport { useLazyGetUsersQuery } from 'dal/users';\r\nimport { UserType } from 'dal/users/types';\r\nimport { useAppDispatch, useAppSelector } from 'store';\r\nimport { setAppStatus } from 'store/reducers';\r\nimport { generateArray } from 'utils';\r\n\r\nconst SKELETON_LIST_ITEMS = generateArray(7);\r\n\r\nconst Users = (): ReturnComponentType => {\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  const status = useAppSelector(state => state.app.status);\r\n\r\n  const [users, setUsers] = useState<UserType[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [totalCount, setTotalCount] = useState(0);\r\n\r\n  const userName = searchParams.get('name');\r\n  const min = Number(searchParams.get('min')) || 0;\r\n  const max = Number(searchParams.get('max')) || 0;\r\n  const sortUsers = searchParams.get('sort') || '0created';\r\n  const [fetchUsers] = useLazyGetUsersQuery();\r\n\r\n  const loadMoreNumbers = async (): Promise<void> => {\r\n    setPage(page => page + 1);\r\n    setLoading(true);\r\n    dispatch(setAppStatus({ status: STATUS.LOADING }));\r\n    const newUsers = await fetchUsers({\r\n      page,\r\n      min,\r\n      max,\r\n      userName,\r\n      sortUsers,\r\n      pageCount: PAGE_COUNT,\r\n    });\r\n\r\n    if (newUsers?.data?.users) {\r\n      setUsers(users => [...users, ...(newUsers?.data?.users as UserType[])]);\r\n    }\r\n    if (totalCount === 0 && newUsers?.data) {\r\n      setTotalCount(newUsers.data.usersTotalCount);\r\n    }\r\n    dispatch(setAppStatus({ status: STATUS.SUCCEEDED }));\r\n    setLoading(false);\r\n  };\r\n\r\n  const hasMoreData = users.length < totalCount;\r\n\r\n  return (\r\n    <div className={style.usersPage}>\r\n      <h2 className={style.title}>Users</h2>\r\n      <div className={style.usersContainer}>\r\n        <InfiniteScroll\r\n          hasMoreData={hasMoreData}\r\n          isLoading={loading}\r\n          onBottomHit={loadMoreNumbers}\r\n          loadOnMount={true}\r\n        >\r\n          {users?.map(({ avatar, email, name, publicCardPacksCount, _id: id }) => {\r\n            return (\r\n              <UserListItem\r\n                userName={name}\r\n                userMail={email}\r\n                cardsCount={publicCardPacksCount}\r\n                avatar={avatar ?? initialAvatar}\r\n                key={id}\r\n              />\r\n            );\r\n          })}\r\n        </InfiniteScroll>\r\n        {(users?.length === 0 || status === STATUS.LOADING) &&\r\n          SKELETON_LIST_ITEMS.map(item => {\r\n            return <SkeletonUserListItem key={item} />;\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n"],"names":["usersAPI","clientAPI","endpoints","build","getUsers","query","queryParams","URL","URI","addQuery","_objectSpread","url","toString","getUser","useLazyGetUsersQuery","useGetUsersQuery","useGetUserQuery","SKELETON_LIST_ITEMS","generateArray","_useSearchParams","useSearchParams","searchParams","_slicedToArray","dispatch","useAppDispatch","status","useAppSelector","state","app","_useState","useState","_useState2","users","setUsers","_useState3","_useState4","loading","setLoading","_useState5","_useState6","page","setPage","_useState7","_useState8","totalCount","setTotalCount","userName","get","min","Number","max","sortUsers","_useLazyGetUsersQuery","fetchUsers","loadMoreNumbers","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_newUsers$data","newUsers","wrap","_context","prev","next","setAppStatus","STATUS","pageCount","PAGE_COUNT","sent","data","_newUsers$data2","concat","_toConsumableArray","usersTotalCount","stop","apply","arguments","hasMoreData","length","_jsxs","className","style","children","_jsx","InfiniteScroll","isLoading","onBottomHit","loadOnMount","map","_ref2","avatar","email","name","publicCardPacksCount","id","_id","UserListItem","userMail","cardsCount","initialAvatar","item","SkeletonUserListItem"],"sourceRoot":""}