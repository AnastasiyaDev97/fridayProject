{"version":3,"sources":["Components/TestComponents/components/c1-SuperInputText/SuperInputText.module.css","Components/TestComponents/components/c2-SuperButton/SuperButton.module.css","Components/TestComponents/components/c3-SuperCheckbox/SuperCheckbox.module.css","Components/TestComponents/TestComponents.module.css","Components/NavBar/NavBar.module.css","Components/Header/Header.module.css","Components/Login/Login.tsx","Components/Profile/Profile.tsx","Components/Redistration/Registration.tsx","Components/NotFound/NotFound.tsx","Components/PasswordRecovery/PasswordRecovery.tsx","Components/NewPassword/NewPassword.tsx","Components/TestComponents/components/c1-SuperInputText/SuperInputText.tsx","Components/TestComponents/components/c2-SuperButton/SuperButton.tsx","Components/TestComponents/components/c3-SuperCheckbox/SuperCheckbox.tsx","Components/TestComponents/TestComponents.tsx","Components/NavBar/NavBar.tsx","Components/Header/Header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Login","Profile","Registration","NotFound","PasswordRecovery","NewPassword","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","input","errorInput","superInput","e","currentTarget","value","key","SuperButton","red","finalClassName","btn","default","SuperCheckbox","onChangeChecked","children","checkbox","labelForCheckBox","checked","TestComponents","props","useState","text","setText","showAlert","alert","setChecked","column","blue","onClick","disabled","NavBar","styles","navBarContainer","to","Header","headerBlock","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de0d6c40.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__1DiXR\",\"superInput\":\"SuperInputText_superInput__w5r9Q\",\"errorInput\":\"SuperInputText_errorInput__nOKD8\",\"error\":\"SuperInputText_error__cA77W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"SuperButton_btn__3cLz3\",\"default\":\"SuperButton_default__AEB2X\",\"red\":\"SuperButton_red__1W5w_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__Msz4j\",\"spanClassName\":\"SuperCheckbox_spanClassName__2EwLX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"TestComponents_blue__bv_Pa\",\"column\":\"TestComponents_column__2o0RO\",\"testSpanError\":\"TestComponents_testSpanError__3LYLC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBarContainer\":\"NavBar_navBarContainer__2ZA3R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerBlock\":\"Header_headerBlock__1gdFq\"};","import React from 'react';\r\n\r\nexport const Login=()=>{\r\n    return(\r\n        <div>\r\n            Login\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\n\r\nexport const Profile=()=>{\r\n    return(\r\n        <div>\r\n            Profile\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\n\r\nexport const Registration=()=>{\r\n    return(\r\n        <div>Registration</div>\r\n    )\r\n}","import React from 'react';\r\n\r\n\r\nexport const NotFound=()=>{\r\n    return(\r\n        <div>\r\n            NotFound\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\n\r\nexport const PasswordRecovery=()=>{\r\n    return(\r\n        <div>\r\n            PasswordRecovery\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\n\r\nexport const NewPassword=()=>{\r\n    return(\r\n        <div>NewPassword</div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className} ` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${s.btn} ${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange&&onChange(e)\n        onChangeChecked&&onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label className={s.labelForCheckBox}>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react';\r\nimport s from './TestComponents.module.css'\r\nimport SuperInputText from \"./components/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"./components/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"./components/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\ntype TestComponentsPropsType = {}\r\n\r\nexport const TestComponents = (props: TestComponentsPropsType) => {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text)\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                ----------------------------------------------------\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}>\r\n                    delete {/*название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                ----------------------------------------------------\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}>\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './NavBar.module.css'\r\n\r\n\r\nexport const NavBar=()=>{\r\n    return(\r\n        <div className={styles.navBarContainer}>\r\n            <NavLink to='/login'>Login</NavLink>\r\n            <NavLink to='/registration'>Registration</NavLink>\r\n            <NavLink to='/profile'>Profile</NavLink>\r\n            <NavLink to='/password-recovery'>Password Recovery</NavLink>\r\n            <NavLink to='/new-password'>Create a new password</NavLink>\r\n            <NavLink to='/test-components'>Test Components</NavLink>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {NavBar} from \"../NavBar/NavBar\";\r\nimport styles from './Header.module.css'\r\n\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={styles.headerBlock}>\r\n            <NavBar/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport {Login} from \"./Components/Login/Login\";\nimport {Profile} from \"./Components/Profile/Profile\";\nimport {Registration} from \"./Components/Redistration/Registration\";\nimport {NotFound} from \"./Components/NotFound/NotFound\";\nimport {PasswordRecovery} from \"./Components/PasswordRecovery/PasswordRecovery\";\nimport {NewPassword} from \"./Components/NewPassword/NewPassword\";\nimport {TestComponents} from \"./Components/TestComponents/TestComponents\";\nimport {Navigate, Route, Routes} from 'react-router-dom';\nimport {Header} from \"./Components/Header/Header\";\n\n\nfunction App() {\n  return (\n    <div>\n        <Header/>\n     <Routes>\n     <Route path={'/login'} element={<Login/>}/>\n     <Route path={'/registration'} element={<Registration/>}/>\n     <Route path={'/profile'} element={<Profile/>}/>\n     <Route path={'/404'} element={<NotFound/>}/>\n     <Route path={'*'} element={<Navigate to='/404'/>}/>\n     <Route path={'/password-recovery'} element={<PasswordRecovery/>}/>\n     <Route path={'/new-password'} element={<NewPassword/>}/>\n     <Route path={'/test-components'} element={<TestComponents/>}/>\n\n       </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter>\n    <App />\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}