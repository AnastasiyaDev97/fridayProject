{"version":3,"sources":["pages/Login/Login.module.scss","constants/form/index.ts","pages/Register/index.tsx"],"names":["module","exports","INPUT_TYPE","REGISTRATION_FORM_FIELDS","register","placeholder","type","FORM_FIELDS_NAME","REMEMBER_ME","EMAIL","PASSWORD","NAME","CONFIRM_PASSWORD","Register","dispatch","useAppDispatch","useRegisterMutation","registerData","data","isRegisterError","isError","navigate","useNavigate","registerStatus","useAppSelector","state","auth","isRegistered","formik","useFormik","initialValues","email","EMPTY_STRING","password","confirmPassword","validate","values","errors","validates","onSubmit","isRegisterButtonDisabled","Object","keys","length","touched","useEffect","setRegisterStatus","errorHandler","onCancelButtonClick","useCallback","resetForm","ROUTES","LOGIN","to","emailFromRegister","addedUser","replace","className","styles","wrapper","title","handleSubmit","form","inputsWrapper","map","validationErr","formikProps","getFieldProps","row","registrationBtns","registerBtn","disabled","onClick"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,uBAAuB,KAAO,oBAAoB,cAAgB,6BAA6B,iBAAmB,gCAAgC,UAAY,yBAAyB,aAAe,4BAA4B,IAAM,mBAAmB,MAAQ,qBAAqB,cAAgB,6BAA6B,YAAc,2BAA2B,gBAAkB,+BAA+B,YAAc,2B,mCCDzc,oEAAO,IAAMC,EACD,WAKCC,EAA2B,CACtC,CACEC,SAAU,QACVC,YAAa,mBACbC,KAPK,SASP,CACEF,SAAU,WACVC,YAAa,uBACbC,KAAMJ,GAER,CACEE,SAAU,kBACVC,YAAa,wBACbC,KAAMJ,IAIGK,EAAmB,CAC9BC,YAAa,aACbC,MAAO,QACPC,SAAU,WACVC,KAAM,OACNC,iBAAkB,kB,yKCkGLC,UA9GE,WAA4B,IAAD,IACpCC,EAAWC,cAEjB,EACEC,cAAqB,mBADhBZ,EAAQ,YAAUa,EAAY,EAAlBC,KAA6BC,EAAe,EAAxBC,QAGjCC,EAAWC,cAEXC,EAAiBC,aAAe,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,YAAY,IAEhEC,EAASC,YAAU,CACvBC,cAAe,CACbC,MAAOC,IACPC,SAAUD,IACVE,gBAAiBF,KAGnBG,SAAU,SAAAC,GACR,IAAMC,EAAmB,CAAC,EAI1B,OAFAC,YAAUF,EAAQC,GAEXA,CACT,EAEAE,SAAU,YAA0B,IAAvBR,EAAK,EAALA,MAAOE,EAAQ,EAARA,SAClB7B,EAAS,CAAE2B,QAAOE,YACpB,IAGIO,GACsB,QAA1B,EAAAC,OAAOC,KAAKd,EAAOS,eAAO,aAA1B,EAA4BM,QAAS,GAA6C,KAAb,QAA3B,EAAAF,OAAOC,KAAKd,EAAOgB,gBAAQ,aAA3B,EAA6BD,QAEzEE,qBAAU,WACJ5B,GACFH,EAASgC,aAAkB,IAEzB3B,GACF4B,YAAajC,EAEjB,GAAG,CAACG,EAAcH,EAAUK,IAE5B,IAKoB,EALd6B,EAAsBC,uBAAY,WACtCrB,EAAOsB,YACP7B,EAAS8B,IAAOC,MAClB,GAAG,CAACxB,EAAQP,IAEZ,OAAIE,EAEA,cAAC,IAAQ,CACP8B,GAAIF,IAAOC,MACX3B,MAAO,CAAE6B,kBAA+B,OAAZrC,QAAY,IAAZA,GAAuB,QAAX,EAAZA,EAAcsC,iBAAS,WAAX,EAAZ,EAAyBxB,OACrDyB,SAAO,IAMX,sBAAKC,UAAWC,IAAOC,QAAQ,UAC7B,oBAAIF,UAAWC,IAAOE,MAAM,qBAC5B,uBAAMrB,SAAUX,EAAOiC,aAAcJ,UAAWC,IAAOI,KAAK,UAC1D,qBAAKL,UAAWC,IAAOK,cAAc,SAClC5D,IAAyB6D,KACxB,gBACE5D,EAAQ,EAARA,SACAC,EAAW,EAAXA,YACAC,EAAI,EAAJA,KAAI,OAMJ,cAAC,IAAc,CACb2D,cACGrC,EAAOgB,QAAQxC,IACdwB,EAAOS,OAAOjC,IAChB4B,IAEFkC,YAAatC,EAAOuC,cAAc/D,GAClCE,KAAMA,EACND,YAAaA,GACRD,EACL,MAKR,qBAAKqD,UAAWC,IAAOU,IAAI,SACzB,sBAAKX,UAAWC,IAAOW,iBAAiB,UACtC,cAAC,IAAW,CACV/D,KAAK,SACLmD,UAAWC,IAAOY,YAClBC,SAAU/B,EAAyB,sBAIrC,cAAC,IAAW,CACVlC,KAAK,SACLkE,QAASxB,EACTS,UAAWC,IAAOY,YAAY,8BAS5C,C","file":"static/js/6.4b0da330.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login_wrapper__2x3h7\",\"form\":\"Login_form__1Y1Hi\",\"inputsWrapper\":\"Login_inputsWrapper__3uV0P\",\"registrationBtns\":\"Login_registrationBtns__egO9s\",\"submitBtn\":\"Login_submitBtn__2rn6V\",\"registerLink\":\"Login_registerLink__1o25-\",\"row\":\"Login_row__Et2_Y\",\"title\":\"Login_title__20JwF\",\"sendMailBlock\":\"Login_sendMailBlock__3_DYD\",\"sendMailBtn\":\"Login_sendMailBtn__3L4Rz\",\"sendMailMessage\":\"Login_sendMailMessage__1FO15\",\"registerBtn\":\"Login_registerBtn__1q6kn\"};","export const INPUT_TYPE = {\r\n  PASSWORD: 'password',\r\n  TEXT: 'text',\r\n  EMAIL: 'email',\r\n} as const;\r\n\r\nexport const REGISTRATION_FORM_FIELDS = [\r\n  {\r\n    register: 'email',\r\n    placeholder: 'Enter your email',\r\n    type: INPUT_TYPE.EMAIL,\r\n  },\r\n  {\r\n    register: 'password',\r\n    placeholder: 'Enter a new password',\r\n    type: INPUT_TYPE.PASSWORD,\r\n  },\r\n  {\r\n    register: 'confirmPassword',\r\n    placeholder: 'Confirm your password',\r\n    type: INPUT_TYPE.PASSWORD,\r\n  },\r\n];\r\n\r\nexport const FORM_FIELDS_NAME = {\r\n  REMEMBER_ME: 'rememberMe',\r\n  EMAIL: 'email',\r\n  PASSWORD: 'password',\r\n  NAME: 'name',\r\n  CONFIRM_PASSWORD: 'confirmPassword',\r\n} as const;\r\n","import { useCallback, useEffect } from 'react';\r\n\r\nimport { useFormik } from 'formik';\r\nimport { Navigate, useNavigate } from 'react-router-dom';\r\n\r\nimport { InputType } from 'common/types/InputType';\r\nimport { ReturnComponentType } from 'common/types/ReturnComponentType';\r\nimport { SuperButton, UniversalInput } from 'components';\r\nimport { REGISTRATION_FORM_FIELDS } from 'constants/form';\r\nimport { EMPTY_STRING } from 'constants/index';\r\nimport { ROUTES } from 'constants/routes';\r\nimport { useRegisterMutation } from 'dal/authorization';\r\nimport styles from 'pages/Login/Login.module.scss';\r\nimport { useAppDispatch, useAppSelector } from 'store';\r\nimport { setRegisterStatus } from 'store/reducers';\r\nimport { errorHandler, AuthData, validates } from 'utils';\r\n\r\nconst Register = (): ReturnComponentType => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [register, { data: registerData, isError: isRegisterError }] =\r\n    useRegisterMutation();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const registerStatus = useAppSelector(state => state.auth.isRegistered);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: EMPTY_STRING,\r\n      password: EMPTY_STRING,\r\n      confirmPassword: EMPTY_STRING,\r\n    },\r\n\r\n    validate: values => {\r\n      const errors: AuthData = {};\r\n\r\n      validates(values, errors);\r\n\r\n      return errors;\r\n    },\r\n\r\n    onSubmit: ({ email, password }) => {\r\n      register({ email, password });\r\n    },\r\n  });\r\n\r\n  const isRegisterButtonDisabled =\r\n    Object.keys(formik.errors)?.length > 0 || Object.keys(formik.touched)?.length === 0;\r\n\r\n  useEffect(() => {\r\n    if (registerData) {\r\n      dispatch(setRegisterStatus(true));\r\n    }\r\n    if (isRegisterError) {\r\n      errorHandler(dispatch);\r\n    }\r\n  }, [registerData, dispatch, isRegisterError]);\r\n\r\n  const onCancelButtonClick = useCallback(() => {\r\n    formik.resetForm();\r\n    navigate(ROUTES.LOGIN);\r\n  }, [formik, navigate]);\r\n\r\n  if (registerStatus) {\r\n    return (\r\n      <Navigate\r\n        to={ROUTES.LOGIN}\r\n        state={{ emailFromRegister: registerData?.addedUser?.email }}\r\n        replace\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <h2 className={styles.title}>Sign up</h2>\r\n      <form onSubmit={formik.handleSubmit} className={styles.form}>\r\n        <div className={styles.inputsWrapper}>\r\n          {REGISTRATION_FORM_FIELDS.map(\r\n            ({\r\n              register,\r\n              placeholder,\r\n              type,\r\n            }: {\r\n              register: string;\r\n              placeholder: string;\r\n              type: InputType;\r\n            }) => (\r\n              <UniversalInput\r\n                validationErr={\r\n                  (formik.touched[register as keyof typeof formik.touched] &&\r\n                    formik.errors[register as keyof typeof formik.touched]) ||\r\n                  EMPTY_STRING\r\n                }\r\n                formikProps={formik.getFieldProps(register)}\r\n                type={type}\r\n                placeholder={placeholder}\r\n                key={register}\r\n              />\r\n            ),\r\n          )}\r\n        </div>\r\n\r\n        <div className={styles.row}>\r\n          <div className={styles.registrationBtns}>\r\n            <SuperButton\r\n              type=\"submit\"\r\n              className={styles.registerBtn}\r\n              disabled={isRegisterButtonDisabled}\r\n            >\r\n              Register\r\n            </SuperButton>\r\n            <SuperButton\r\n              type=\"button\"\r\n              onClick={onCancelButtonClick}\r\n              className={styles.registerBtn}\r\n            >\r\n              Cancel\r\n            </SuperButton>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"sourceRoot":""}