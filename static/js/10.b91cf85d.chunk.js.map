{"version":3,"sources":["pages/Packs/Packs.module.scss","constants/data/index.ts","pages/Packs/index.tsx"],"names":["module","exports","SORT_CARDS_TYPE","Packs","memo","useSearchParams","searchParams","actualPackName","get","currentPage","Number","min","max","sortPacks","userId","useGetPacksQuery","page","packName","user_id","pageCount","PAGE_COUNT","packs","data","isSuccess","className","style","wrapper","currentMinCardsValue","currentMaxCardsValue","maxCardsCount","cardPacks","totalItemCount","cardPacksTotalCount"],"mappings":"4FACAA,EAAOC,QAAU,CAAC,QAAU,uB,+FCCfC,EAGA,W,uBCOPC,EAAQC,gBAAK,WACjB,MAAuBC,cAAhBC,EAAiC,iBAArB,GAEbC,EAAiBD,EAAaE,IAAI,QAClCC,EAAcC,OAAOJ,EAAaE,IAAI,UAAY,EAClDG,EAAMD,OAAOJ,EAAaE,IAAI,QAC9BI,EAAMF,OAAOJ,EAAaE,IAAI,QAC9BK,EAAYP,EAAaE,IAAI,SAAWN,EACxCY,EAASR,EAAaE,IAAI,WAAa,GAE7C,EAIIO,YAAiB,CACnBC,KAAMP,EACNE,MACAC,MACAK,SAAUV,EACVW,QAASJ,EACTD,UAAWA,EACXM,UAAWC,MAVLC,EAAK,EAAXC,KACyB,EAAzBC,UAYF,OACE,sBAAKC,UAAWC,IAAMC,QAAQ,UAC5B,cAAC,IAAW,CACVC,qBAAsBhB,EACtBiB,qBAAsBhB,EACtBiB,cAAoB,OAALR,QAAK,IAALA,OAAK,EAALA,EAAOQ,gBAExB,cAAC,IAAS,CACRR,MAAY,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOS,UACdrB,YAAaA,EACbsB,eAAqB,OAALV,QAAK,IAALA,OAAK,EAALA,EAAOW,oBACvBnB,UAAWA,EACXN,eAAgBA,MAwBxB,IAEeJ,W","file":"static/js/10.b91cf85d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Packs_wrapper__24_NE\"};","import { LiteralObjectType } from 'common/types/LiteralObjectType';\r\n\r\nexport const SORT_CARDS_TYPE = {\r\n  nameUP: '0name',\r\n  nameDOWN: '1name',\r\n  updatedUP: '0updated',\r\n  updateDOWN: '1update',\r\n  answerUP: '0answer',\r\n  answerDOWN: '1answer',\r\n  questionUP: '0question',\r\n  questionDOWN: '1question',\r\n  gradeUP: '0grade',\r\n  gradeDOWN: '1grade',\r\n} as const;\r\n\r\nexport type SortCardType = LiteralObjectType<typeof SORT_CARDS_TYPE>;\r\n","import { memo } from 'react';\r\n\r\nimport { Skeleton } from '@mui/material';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nimport style from './Packs.module.scss';\r\n\r\nimport { PacksList, PacksParams } from 'components';\r\nimport { SORT_CARDS_TYPE } from 'constants/data';\r\nimport { PAGE_COUNT } from 'constants/table';\r\nimport { useGetPacksQuery } from 'dal/packs';\r\n\r\nconst Packs = memo(() => {\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const actualPackName = searchParams.get('name');\r\n  const currentPage = Number(searchParams.get('page')) || 1;\r\n  const min = Number(searchParams.get('min'));\r\n  const max = Number(searchParams.get('max'));\r\n  const sortPacks = searchParams.get('sort') || SORT_CARDS_TYPE.updatedUP;\r\n  const userId = searchParams.get('userId') || '';\r\n  const isPacksLoading = true;\r\n  const {\r\n    data: packs,\r\n    isSuccess: isPacksSuccess,\r\n    /*  isLoading: isPacksLoading, */\r\n  } = useGetPacksQuery({\r\n    page: currentPage,\r\n    min,\r\n    max,\r\n    packName: actualPackName,\r\n    user_id: userId,\r\n    sortPacks: sortPacks,\r\n    pageCount: PAGE_COUNT,\r\n  });\r\n\r\n  return (\r\n    <div className={style.wrapper}>\r\n      <PacksParams\r\n        currentMinCardsValue={min}\r\n        currentMaxCardsValue={max}\r\n        maxCardsCount={packs?.maxCardsCount}\r\n      />\r\n      <PacksList\r\n        packs={packs?.cardPacks}\r\n        currentPage={currentPage}\r\n        totalItemCount={packs?.cardPacksTotalCount}\r\n        sortPacks={sortPacks}\r\n        actualPackName={actualPackName}\r\n      />\r\n    </div>\r\n  );\r\n  /*   } */\r\n  /*  if (isPacksLoading) {\r\n    return (\r\n      <Skeleton\r\n        variant=\"rectangular\"\r\n        width={1150}\r\n        height={770}\r\n        sx={{ background: 'white' }}\r\n      >\r\n        <Skeleton\r\n          variant=\"rectangular\"\r\n          width={200}\r\n          height={770}\r\n          sx={{ background: 'red' }}\r\n        ></Skeleton>\r\n      </Skeleton>\r\n    );\r\n  } */\r\n\r\n  return null;\r\n});\r\n\r\nexport default Packs;\r\n"],"sourceRoot":""}