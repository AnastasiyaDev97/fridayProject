{"version":3,"file":"static/js/264.344458c6.chunk.js","mappings":"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","sources":["hooks/useResponseHandler.tsx","pages/ForgotPassword/index.tsx","webpack://my-app/./src/pages/Login/Login.module.scss?62e7"],"sourcesContent":["import { useEffect } from 'react';\r\n\r\nimport { STATUS } from 'constants/app';\r\nimport { useAppDispatch } from 'store';\r\nimport { setAppStatus, setErrorText } from 'store/reducers';\r\n\r\ntype UseResponsePropsType = {\r\n  isLoading: boolean;\r\n  isSuccess: boolean;\r\n  isError: boolean;\r\n  errorText?: string;\r\n};\r\n\r\nexport const useResponseHandler = ({\r\n  isLoading,\r\n  isSuccess,\r\n  isError,\r\n  errorText,\r\n}: UseResponsePropsType): void => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      dispatch(setAppStatus({ status: STATUS.LOADING }));\r\n    }\r\n    if (isSuccess) {\r\n      dispatch(setAppStatus({ status: STATUS.SUCCEEDED }));\r\n    }\r\n    if (isError) {\r\n      dispatch(setAppStatus({ status: STATUS.FAILED }));\r\n      dispatch(setErrorText({ errorText: errorText || 'Something went wrong' }));\r\n    }\r\n  }, [dispatch, isLoading, isSuccess, isError, errorText]);\r\n};\r\n","import { useCallback, useEffect, useState } from 'react';\r\n\r\nimport { useFormik } from 'formik';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\n\r\nimport { ReturnComponentType } from 'common/types/ReturnComponentType';\r\nimport { UniversalInput, SuperButton } from 'components';\r\nimport { EMPTY_STRING } from 'constants/index';\r\nimport { ROUTES } from 'constants/routes';\r\nimport { useSendPasswordMutation } from 'dal/authorization';\r\nimport { useResponseHandler } from 'hooks/useResponseHandler';\r\nimport styles from 'pages/Login/Login.module.scss';\r\nimport { useAppDispatch, useAppSelector } from 'store';\r\nimport { setProfileData } from 'store/reducers';\r\nimport { AuthData, validateForgotPasswordForm } from 'utils';\r\n\r\nconst ForgotPassword = (): ReturnComponentType => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [\r\n    sendPassword,\r\n    { data: sendPasswordResponseData, isError, isLoading, isSuccess },\r\n  ] = useSendPasswordMutation();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const emailForRecovery = useAppSelector(state => state.profile.email);\r\n\r\n  const [isCheckEmailDataShow, setIsCheckEmailDataShow] = useState(false);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: EMPTY_STRING,\r\n    },\r\n    validate: values => {\r\n      const errors: AuthData = {};\r\n\r\n      validateForgotPasswordForm(values, errors);\r\n\r\n      return errors;\r\n    },\r\n\r\n    onSubmit: values => {\r\n      sendPassword(values.email);\r\n      dispatch(setProfileData({ email: values.email }));\r\n      formik.resetForm();\r\n    },\r\n  });\r\n\r\n  const onButtonTogglePasswordStatusClick = useCallback(() => {\r\n    setIsCheckEmailDataShow(false);\r\n    navigate(ROUTES.LOGIN);\r\n  }, [navigate]);\r\n\r\n  const isActionButtonDisabled = Object.keys(formik.errors)?.length > 0 || !formik.dirty;\r\n\r\n  useEffect(() => {\r\n    if (sendPasswordResponseData?.success) {\r\n      setIsCheckEmailDataShow(true);\r\n    }\r\n  }, [sendPasswordResponseData]);\r\n\r\n  useResponseHandler({\r\n    isLoading,\r\n    isSuccess,\r\n    isError,\r\n  });\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      {isCheckEmailDataShow ? (\r\n        <div className={styles.sendMailBlock}>\r\n          <h2 className={styles.title}>Check email</h2>\r\n          <div className={styles.sendMailMessage}>\r\n            We&apos;ve sent an Email with instructions to {emailForRecovery}\r\n          </div>\r\n          <SuperButton\r\n            className={styles.sendMailBtn}\r\n            type=\"button\"\r\n            onClick={onButtonTogglePasswordStatusClick}\r\n          >\r\n            Ok\r\n          </SuperButton>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <h2 className={styles.title}>Forgot your password?</h2>\r\n          <form\r\n            className={styles.form}\r\n            onSubmit={e => {\r\n              formik.handleSubmit(e);\r\n            }}\r\n          >\r\n            <div className={styles.inputsWrapper}>\r\n              <UniversalInput\r\n                validationErr={\r\n                  (formik.touched.email && formik.errors.email) || EMPTY_STRING\r\n                }\r\n                formikProps={formik.getFieldProps('email')}\r\n              />\r\n            </div>\r\n\r\n            <div>Enter your email address and we will send you further instructions</div>\r\n\r\n            <SuperButton\r\n              className={styles.submitBtn}\r\n              type=\"submit\"\r\n              disabled={isActionButtonDisabled}\r\n            >\r\n              Send instructions\r\n            </SuperButton>\r\n          </form>\r\n          <div>Do you remember your password?</div>\r\n          <NavLink className={styles.registerLink} to={ROUTES.LOGIN}>\r\n            Try logging in\r\n          </NavLink>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Login_wrapper__1rI2S\",\"form\":\"Login_form__LxTDf\",\"inputsWrapper\":\"Login_inputsWrapper__FcfGc\",\"registrationBtns\":\"Login_registrationBtns__4bEon\",\"submitBtn\":\"Login_submitBtn__oXced\",\"registerLink\":\"Login_registerLink__D-fug\",\"row\":\"Login_row__bysr9\",\"title\":\"Login_title__-Qf3T\",\"sendMailBlock\":\"Login_sendMailBlock__0MDly\",\"sendMailBtn\":\"Login_sendMailBtn__DEA8C\",\"sendMailMessage\":\"Login_sendMailMessage__VIUxh\",\"registerBtn\":\"Login_registerBtn__OeUh8\"};"],"names":["useResponseHandler","_ref","isLoading","isSuccess","isError","errorText","dispatch","useAppDispatch","useEffect","setAppStatus","status","STATUS","setErrorText","_Object$keys","_useSendPasswordMutat","useSendPasswordMutation","_useSendPasswordMutat2","_slicedToArray","sendPassword","_useSendPasswordMutat3","sendPasswordResponseData","data","navigate","useNavigate","emailForRecovery","useAppSelector","state","profile","email","_useState","useState","_useState2","isCheckEmailDataShow","setIsCheckEmailDataShow","formik","useFormik","initialValues","EMPTY_STRING","validate","values","errors","validateForgotPasswordForm","onSubmit","setProfileData","resetForm","onButtonTogglePasswordStatusClick","useCallback","ROUTES","isActionButtonDisabled","Object","keys","length","dirty","success","_jsx","className","styles","children","_jsxs","SuperButton","type","onClick","_Fragment","e","handleSubmit","UniversalInput","validationErr","touched","formikProps","getFieldProps","disabled","NavLink","to"],"sourceRoot":""}