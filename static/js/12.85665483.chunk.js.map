{"version":3,"sources":["pages/Users/Users.module.scss","dal/users/index.ts","pages/Users/index.tsx"],"names":["module","exports","usersAPI","clientAPI","injectEndpoints","endpoints","build","getUsers","query","queryParams","URL","URI","addQuery","url","toString","getUser","useGetUsersQuery","useGetUserQuery","SKELETON_LIST_ITEMS","generateArray","Users","useSearchParams","searchParams","userName","get","page","Number","min","max","sortUsers","pageCount","PAGE_COUNT","usersData","data","isUsersSuccess","isSuccess","isUsersLoading","isLoading","isError","className","style","usersPage","title","usersContainer","users","map","avatar","email","name","publicCardPacksCount","id","_id","userMail","cardsCount","initialAvatar","item","totalItemCount","usersTotalCount","currentPage"],"mappings":"4FACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,MAAQ,qBAAqB,eAAiB,8B,kICU/FC,E,MAAWC,EAAUC,gBAAgB,CACzCC,UAAW,SAACC,GAAkB,MAAM,CAClCC,SAAUD,EAAME,MAAqD,CACnEA,MAAK,SAACC,GACJ,IAAMC,EAAM,IAAIC,IAAI,gBAIpB,OAFAD,EAAIE,SAAS,eAAKH,IAEX,CACLI,IAAKH,EAAII,WAEb,IAEFC,QAAST,EAAME,MAAmD,CAChEA,MAAK,SAACC,GACJ,IAAMC,EAAM,IAAIC,IAAI,eAIpB,OAFAD,EAAIE,SAAS,eAAKH,IAEX,CACLI,IAAKH,EAAII,WAEb,IAEH,IAGYE,EAAsCd,EAAtCc,iB,GAAsCd,EAApBe,gB,cC3B3BC,EAAsBC,YAAc,GAsD3BC,UApDD,WACZ,MAAuBC,cAAhBC,EAAiC,iBAArB,GAEbC,EAAWD,EAAaE,IAAI,QAC5BC,EAAOC,OAAOJ,EAAaE,IAAI,UAAY,EAC3CG,EAAMD,OAAOJ,EAAaE,IAAI,SAAW,EACzCI,EAAMF,OAAOJ,EAAaE,IAAI,SAAW,EACzCK,EAAYP,EAAaE,IAAI,SAAW,WAE9C,EAKIR,EAAiB,CACnBS,OACAE,MACAC,MACAL,WACAM,YACAC,UAAWC,MAVLC,EAAS,EAAfC,KACWC,EAAc,EAAzBC,UACWC,EAAc,EAAzBC,UACqB,EAArBC,QAUF,OACE,sBAAKC,UAAWC,IAAMC,UAAU,UAC9B,oBAAIF,UAAWC,IAAME,MAAM,mBAC3B,sBAAKH,UAAWC,IAAMG,eAAe,UAClCT,GACCF,GACAA,EAAUY,MAAMC,KACd,YAA6D,IAA1DC,EAAM,EAANA,OAAQC,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAAMC,EAAoB,EAApBA,qBAA2BC,EAAE,EAAPC,IAC5C,OACE,cAAC,IAAY,CACX5B,SAAUyB,EACVI,SAAUL,EACVM,WAAYJ,EACZH,OAAc,OAANA,QAAM,IAANA,IAAUQ,KACbJ,EAGX,IAEHd,GACClB,EAAoB2B,KAAI,SAAAU,GACtB,OAAO,cAAC,IAAoB,GAAMA,EACpC,OAEJ,cAAC,IAAU,CAACC,eAAyB,OAATxB,QAAS,IAATA,OAAS,EAATA,EAAWyB,gBAAiBC,YAAajC,MAG3E,C","file":"static/js/12.85665483.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPage\":\"Users_usersPage__PcRdQ\",\"title\":\"Users_title__2CbOb\",\"usersContainer\":\"Users_usersContainer__3C_0g\"};","import URI from 'urijs';\r\n\r\nimport {\r\n  getUserQueryParamsType,\r\n  getUserResponseType,\r\n  getUsersQueryParamsType,\r\n  getUsersResponseType,\r\n} from './types';\r\n\r\nimport { builderType, clientAPI } from 'dal';\r\n\r\nconst usersAPI = clientAPI.injectEndpoints({\r\n  endpoints: (build: builderType) => ({\r\n    getUsers: build.query<getUsersResponseType, getUsersQueryParamsType>({\r\n      query(queryParams) {\r\n        const URL = new URI(`social/users`);\r\n\r\n        URL.addQuery({ ...queryParams });\r\n\r\n        return {\r\n          url: URL.toString(),\r\n        };\r\n      },\r\n    }),\r\n    getUser: build.query<getUserResponseType, getUserQueryParamsType>({\r\n      query(queryParams) {\r\n        const URL = new URI(`social/user`);\r\n\r\n        URL.addQuery({ ...queryParams });\r\n\r\n        return {\r\n          url: URL.toString(),\r\n        };\r\n      },\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetUsersQuery, useGetUserQuery } = usersAPI;\r\n","import { useSearchParams } from 'react-router-dom';\r\n\r\nimport style from './Users.module.scss';\r\n\r\nimport initialAvatar from 'common/assets/images/noavatar.png';\r\nimport { ReturnComponentType } from 'common/types';\r\nimport { Pagination, Preloader, SkeletonUserListItem, UserListItem } from 'components';\r\nimport { PAGE_COUNT } from 'constants/table';\r\nimport { useGetUsersQuery } from 'dal/users';\r\nimport { generateArray } from 'utils';\r\n\r\nconst SKELETON_LIST_ITEMS = generateArray(7);\r\n\r\nconst Users = (): ReturnComponentType => {\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const userName = searchParams.get('name');\r\n  const page = Number(searchParams.get('page')) || 1;\r\n  const min = Number(searchParams.get('min')) || 0;\r\n  const max = Number(searchParams.get('max')) || 0;\r\n  const sortUsers = searchParams.get('sort') || '0created';\r\n\r\n  const {\r\n    data: usersData,\r\n    isSuccess: isUsersSuccess,\r\n    isLoading: isUsersLoading,\r\n    isError: isUsersError,\r\n  } = useGetUsersQuery({\r\n    page,\r\n    min,\r\n    max,\r\n    userName,\r\n    sortUsers,\r\n    pageCount: PAGE_COUNT,\r\n  });\r\n\r\n  return (\r\n    <div className={style.usersPage}>\r\n      <h2 className={style.title}>Users</h2>\r\n      <div className={style.usersContainer}>\r\n        {isUsersSuccess &&\r\n          usersData &&\r\n          usersData.users.map(\r\n            ({ avatar, email, name, publicCardPacksCount, _id: id }) => {\r\n              return (\r\n                <UserListItem\r\n                  userName={name}\r\n                  userMail={email}\r\n                  cardsCount={publicCardPacksCount}\r\n                  avatar={avatar ?? initialAvatar}\r\n                  key={id}\r\n                />\r\n              );\r\n            },\r\n          )}\r\n        {isUsersLoading &&\r\n          SKELETON_LIST_ITEMS.map(item => {\r\n            return <SkeletonUserListItem key={item} />;\r\n          })}\r\n      </div>\r\n      <Pagination totalItemCount={usersData?.usersTotalCount} currentPage={page} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n"],"sourceRoot":""}